on:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:

  # steps for building assets
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, aarch64, riscv64]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2022-02-22
        components: rust-src, llvm-tools-preview
    - name: Setup environment
      run: make -C kernel env ARCH=${{ matrix.arch }}

    - name: Install musl toolchain
      run: |
        if [ "${{ matrix.arch }}" = "x86_64" ]; then
          export MUSL_PATH="x86_64-linux-musl-cross"
        elif [ "${{ matrix.arch }}" = "aarch64" ]; then
          export MUSL_PATH="aarch64-linux-musl-cross"
        elif [ "${{ matrix.arch }}" = "riscv64" ]; then
          export MUSL_PATH="riscv64-linux-musl-cross"
        fi
        wget https://musl.cc/$MUSL_PATH.tgz
        tar -xf $MUSL_PATH.tgz
        mv $MUSL_PATH musl

    - name: Build kernel
      run: |
        export PATH=$PATH:$PWD/musl/bin
        make -C kernel ARCH=${{ matrix.arch }}

    - name: Archive
      run: | 
        zip  -j -r ${{ matrix.arch }}.zip kernel/target/${{ matrix.arch }}/release/nimbos

    - name: Create a Release
      id: create_release
      uses: shogo82148/actions-create-release@v1

    # A release created by shogo82148/actions-create-release is alway draft here.
    # So users may not see an empty release.

    - name: Upload Assets
      uses: shogo82148/actions-upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ matrix.arch }}.zip

    # shogo82148/actions-create-release publishes the release in the end of the job.