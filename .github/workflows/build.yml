name: Build CI

permissions:
  contents: write

on: [push, pull_request]

jobs:
  clippy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86_64, aarch64, riscv64]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2022-11-03
        override: true
        components: rust-src, clippy, rustfmt
    - name: Clippy
      run: make -C kernel clippy ARCH=${{ matrix.arch }}
    - name: Check code format
      run: cd kernel && cargo fmt -- --check

  release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.step_version.outputs.version }}
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          test
        draft: false
        prerelease: false
    - id: step_version
      run: echo "version=${{ steps.package_version.outputs.version }}" >> "$GITHUB_OUTPUT"
    - id: step_upload_url
      run: echo "upload_url=${{ steps.create_release.outputs.upload_url }}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64, aarch64, riscv64]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: nightly-2022-02-22
        components: rust-src, llvm-tools-preview
    - name: Setup environment
      run: make -C kernel env ARCH=${{ matrix.arch }}

    - name: Install musl toolchain
      run: |
        if [ "${{ matrix.arch }}" = "x86_64" ]; then
          export MUSL_PATH="x86_64-linux-musl-cross"
        elif [ "${{ matrix.arch }}" = "aarch64" ]; then
          export MUSL_PATH="aarch64-linux-musl-cross"
        elif [ "${{ matrix.arch }}" = "riscv64" ]; then
          export MUSL_PATH="riscv64-linux-musl-cross"
        fi
        wget https://musl.cc/$MUSL_PATH.tgz
        tar -xf $MUSL_PATH.tgz
        mv $MUSL_PATH musl

    - name: Build kernel
      run: |
        export PATH=$PATH:$PWD/musl/bin
        make -C kernel ARCH=${{ matrix.arch }}

    - name: Archive
      run: | 
        zip  -j -r ${{ matrix.arch }}.zip kernel/target/${{ matrix.arch }}/release/nimbos

    - name: Upload asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.release.outputs.upload_url }}
        asset_path: ${{ matrix.arch }}.zip
        asset_name: nimbos-${{ github.ref_name }}-${{ matrix.arch }}.zip
        asset_content_type: application/zip

